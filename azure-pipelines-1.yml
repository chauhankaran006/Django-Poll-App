# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  imageRepo: pollmeapp
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: windows-2019
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'my3rddemoacr'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Pipeline.Workspace)/s/kubernetes'
        ArtifactName: 'manifests'
        publishLocation: 'Container'
- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    acrsecret: k8sexamplesacrauth
    acrdevurl: 'my3rddemoacr.azurecr.io'
    replicaNo: 2
  jobs:
    - job: Deploy
      displayName: Deploy to AKS
      pool:
        vmImage: windows-2019
      steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'manifests'
          targetPath: '$(Pipeline.Workspace)/manifests'
      - task: KubernetesManifest@0
        inputs:
          action: 'createSecret'
          kubernetesServiceConnection: 'kubernetesConnection'
          namespace: 'default'
          secretType: 'dockerRegistry'
          secretName: '$(acrsecret)'
          dockerRegistryEndpoint: 'my3rddemoacr'
      - task: KubernetesManifest@0
        inputs:
          action: 'createSecret'
          kubernetesServiceConnection: 'kubernetesConnection'
          namespace: 'default'
          secretType: 'generic'
          secretName: 'azure-secret-fshare'
          secretArguments: '--from-literal=azurestorageaccountname="my-pg-py-demo" --from-literal=azurestorageaccountkey="NcWrrdTVUXI/VNpl3PemBf0pkQ19SkY1SquNttNlL7zC9eslujWvp2O4NE6iMoTa179w/mKEhVKA+AStn0dLgA=="'
      - task: replacetokens@5
        displayName: Replace Tokens
        inputs:
          rootDirectory: '$(Pipeline.Workspace)/manifests/'
          targetFiles: 'pool-app-deployment.yml'
          encoding: 'auto'
          tokenPattern: 'custom'
          tokenPrefix: '#'
          tokenSuffix: '#'
          writeBOM: true
          actionOnMissing: 'warn'
          keepToken: false
          actionOnNoFiles: 'continue'
          enableTransforms: false
          enableRecursion: false
          useLegacyPattern: false
          enableTelemetry: true
      - task: KubernetesManifest@0
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'kubernetesConnection'
          namespace: 'default'
          manifests: |
            $(Pipeline.Workspace)/manifests/poll-app-pv.yml
            $(Pipeline.Workspace)/manifests/poll-app-pvc.yml
            $(Pipeline.Workspace)/manifests/poll-app-secret-provider-class.yml
            $(Pipeline.Workspace)/manifests/pool-app-deployment.yml
          containers: '$(acrdevurl)/$(imageRepo):$(tag)'